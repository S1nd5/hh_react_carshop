{"version":3,"sources":["components/Addcar.js","components/Editcar.js","components/Carlist.js","App.js","reportWebVitals.js","index.js"],"names":["Addcar","props","React","useState","open","setOpen","brand","model","color","fuel","year","price","car","setCar","handleClickClose","handleInputChange","e","target","name","value","Button","variant","style","margin","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","onChange","label","type","fullWidth","required","DialogActions","onClick","saveCar","Editcar","console","log","updateCar","_links","href","Carlist","cars","setCars","columns","field","sortable","filter","cellRendererFramework","params","data","deleteEntry","self","fetchData","fetch","then","response","json","_embedded","catch","err","error","link","method","headers","body","JSON","stringify","window","confirm","res","useEffect","agCell","display","alignItems","className","marginTop","height","rowData","columnDefs","pagination","paginationPageSize","gridOptions","suppressSizeToFit","sizeColumnsToFit","App","AppBar","position","Toolbar","Typography","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05dad9d7.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n\r\nexport default function Addcar(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [car, setCar] = React.useState({\r\n        brand: '',\r\n        model: '',\r\n        color: '',\r\n        fuel: '',\r\n        year: '',\r\n        price: ''\r\n    })\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClickClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        setCar({ ...car, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const save = () => {\r\n        handleClickClose();\r\n        props.saveCar(car);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" style={{ margin: 10 }} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                Add new car\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClickClose}>\r\n                <DialogTitle>New car</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Creates a new car to the database\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        name=\"brand\"\r\n                        value={car.brand}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"Brand\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        name=\"model\"\r\n                        value={car.model}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"Model\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        name=\"color\"\r\n                        value={car.color}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"Color\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        name=\"year\"\r\n                        value={car.year}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"Year\"\r\n                        type=\"number\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        name=\"fuel\"\r\n                        value={car.fuel}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"Fuel\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        name=\"price\"\r\n                        value={car.price}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"Price\"\r\n                        type=\"number\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        required\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClickClose}>Cancel</Button>\r\n                    <Button onClick={save}>Add</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n\r\nexport default function Editcar(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [car, setCar] = React.useState({\r\n        brand: '',\r\n        model: '',\r\n        color: '',\r\n        fuel: '',\r\n        year: '',\r\n        price: ''\r\n    })\r\n\r\n    const handleClickOpen = () => {\r\n        console.log(props.car);\r\n        setCar({ brand: props.car.brand, model: props.car.model, color: props.car.color, year: props.car.year, fuel: props.car.fuel, price: props.car.price });\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClickClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        setCar({ ...car, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const updateCar = () => {\r\n        handleClickClose();\r\n        props.updateCar(car, props.car._links.car.href);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                Edit\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClickClose}>\r\n                <DialogTitle>New car</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Creates a new car to the database\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        name=\"brand\"\r\n                        value={car.brand}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"Brand\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        name=\"model\"\r\n                        value={car.model}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"Model\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        name=\"color\"\r\n                        value={car.color}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"Color\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        name=\"year\"\r\n                        value={car.year}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"Year\"\r\n                        type=\"number\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        name=\"fuel\"\r\n                        value={car.fuel}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"Fuel\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        name=\"price\"\r\n                        value={car.price}\r\n                        onChange={e => handleInputChange(e)}\r\n                        label=\"Price\"\r\n                        type=\"number\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        required\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClickClose}>Cancel</Button>\r\n                    <Button onClick={updateCar}>Save</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\r\n\r\nimport Addcar from './Addcar';\r\nimport Editcar from './Editcar';\r\n\r\nfunction Carlist() {\r\n    const [cars, setCars] = useState([]);\r\n    const gridOptions = [\r\n        { suppressSizeToFit: true },\r\n        { sizeColumnsToFit: true }\r\n    ]\r\n    const columns = [\r\n        { field: 'brand', sortable: true, filter: true },\r\n        { field: 'model', sortable: true, filter: true },\r\n        { field: 'color', sortable: true, filter: true },\r\n        { field: 'fuel', sortable: true, filter: true },\r\n        { field: 'year', sortable: true, filter: true },\r\n        { field: 'price', sortable: true, filter: true },\r\n        {\r\n            field: 'mofidy', cellRendererFramework: function (params) {\r\n                return (\r\n                    <div>\r\n                        <Editcar variant=\"contained\" car={params.data} updateCar={updateCar} />\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n        {\r\n            field: 'detele', cellRendererFramework: function (params) {\r\n                return (\r\n                    <div>\r\n                        <Button variant=\"contained\" onClick={() => deleteEntry(params.data._links.self.href)} color=\"error\">Delete</Button>\r\n                    </div>\r\n                );\r\n            }\r\n        },\r\n    ]\r\n\r\n    const fetchData = () => {\r\n        fetch('https://carstockrest.herokuapp.com/cars')\r\n            .then(response => response.json())\r\n            .then(data => setCars(data._embedded.cars))\r\n            .catch(err => console.error(err))\r\n    }\r\n\r\n    const updateCar = (car, link) => {\r\n        fetch(link, { method: 'PUT', headers: { 'Content-type': 'application/json' }, body: JSON.stringify(car) })\r\n            .then(response => response.json())\r\n            .then(data => fetchData())\r\n            .catch(err => console.error(err))\r\n    }\r\n\r\n    const saveCar = (car) => {\r\n        fetch('https://carstockrest.herokuapp.com/cars', { method: 'POST', headers: { 'Content-type': 'application/json' }, body: JSON.stringify(car) })\r\n            .then(response => response.json())\r\n            .then(data => fetchData())\r\n            .catch(err => console.error(err))\r\n    }\r\n\r\n    const deleteEntry = (link) => {\r\n        console.log(\"Delete URL: \" + link);\r\n        if (window.confirm(\"Would you like to delete the selected vehicle?\")) {\r\n            fetch(link, { method: 'DELETE' })\r\n                .then(res => fetchData())\r\n                .catch(err => console.error(err));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ agCell: { display: 'flex', alignItems: 'center' } }}>\r\n            <Addcar saveCar={saveCar} />\r\n            <div className=\"ag-theme-material\" style={{ marginTop: 20, height: 600, margin: 'auto' }}>\r\n                <AgGridReact\r\n                    rowData={cars}\r\n                    columnDefs={columns}\r\n                    pagination=\"true\"\r\n                    paginationPageSize=\"10\"\r\n                    gridOptions={gridOptions}>\r\n                    <AgGridColumn field=\"brand\"></AgGridColumn>\r\n                    <AgGridColumn field=\"model\"></AgGridColumn>\r\n                    <AgGridColumn field=\"price\"></AgGridColumn>\r\n                </AgGridReact>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Carlist;","import './App.css';\r\nimport Carlist from './components/Carlist';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\">\r\n            Carshop\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Carlist />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}